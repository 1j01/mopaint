{
  "rules": {
    ".read": false,
    ".write": false,
    "documents": {
      "$document_id": {
        ".write": "(data.child('public').val() === true) || (auth != null && ((data.child('owner_uid').val() == auth.uid) || !data.exists()))",
        ".read": "(data.child('public').val() === true) || (auth != null && data.child('owner_uid').val() == auth.uid)",
        ".validate": "data.exists() || $document_id.matches(/^[0-9a-f]{40}$/)",
        "owner_uid": {
          ".validate": "newData.val() == auth.uid && !data.exists() && !(data.parent().child('public').val() === true)"
        },
        "public": {
          ".write": false,
          ".validate": "newData.isBoolean()"
        },
        "title": { ".validate": "newData.isString()" },
        "content": {
          "frames": {
            "$frame_id": {
              ".validate": "newData.hasChildren(['content'])",
              "content": {
                ".validate": "newData.isString()"
              },
              "$other": { ".validate": false }
            }
          },
          "meta": {
            "type": {
              ".validate": "((newData.val() == 'image') && !newData.hasChild('order')) || ((newData.val() == 'animation') && newData.hasChild('order')) || ((newData.val() == 'icon') && newData.hasChild('order'))"
            },
            "order": {
              "$index": { ".validate": "newData.isString() && newData.parent().parent().child('frames').hasChild(newData.val()) && $index.matches(/\\d+/)" }
            },
            "$other": { ".validate": false }
          },
          "$other": { ".validate": false }
        },
        "$other": { ".validate": false }
      }
    },
    "$other": { ".validate": false }
  }
}
